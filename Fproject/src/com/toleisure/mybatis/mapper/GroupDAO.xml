<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toleisure.mybatis.dao.IGroupDAO">

   <insert parameterType="com.toleisure.mybatis.dto.GroupDTO" id="newGroup">
      {CALL
         DECLARE
            grCodeSeq INT;
         BEGIN
            grCodeSeq := GROUPINGSEQ.NEXTVAL;
            
            <choose>
               <when test='grCate2 != 0'>
                  INSERT INTO TBL_GROUP
                     (GR_CODE, MEM_ID, GR_NAME, GR_PRE, GR_NOTICE, CATE_CODE1, CATE_CODE2)
                  VALUES
                     (grCodeSeq, #{memId}, #{grName}, #{grPre}, #{grNotice}, #{grCate1},#{grCate2});
               </when>
               <otherwise>
                  INSERT INTO TBL_GROUP
                     (GR_CODE, MEM_ID, GR_NAME, GR_PRE, GR_NOTICE, CATE_CODE1)
                   VALUES
                      (grCodeSeq, #{memId}, #{grName}, #{grPre}, #{grNotice}, #{grCate1});
               </otherwise>
            </choose>
            
            INSERT INTO NOW_GROUP (NG_CODE, GR_CODE, NG_PIC, NG_MAX, NG_MIN,
           	NG_STARTDATE, NG_ENDDATE, NG_COST, NG_LOCATION, NG_INTRO, NG_MYINTRO,XLOCATION,YLOCATION)
            VALUES(NOW_GROUPSEQ.NEXTVAL, grCodeSeq, #{ngPic}, #{ngMax}, #{ngMin}
            	, TO_DATE(#{ngStart1}||#{ngStart2}, 'YY-MM-DD HH24:MI:SS'),
            	TO_DATE(#{ngEnd1}||#{ngEnd2}, 'YY-MM-DD HH24:MI:SS')
            	, #{ngCost}, #{ngLocation1}||#{ngLocation2}
            	, #{ngIntro}, #{ngMyIntro},#{xlocation},#{ylocation});
      END
      }
   </insert>
   
   
      <insert parameterType="com.toleisure.mybatis.dto.GroupDTO" id="addGroup">
            INSERT INTO NOW_GROUP(NG_CODE, GR_CODE, NG_PIC, NG_MAX, NG_MIN,
            NG_STARTDATE, NG_ENDDATE, NG_COST, NG_LOCATION, NG_INTRO, NG_MYINTRO,XLOCATION,YLOCATION)
            VALUES(NOW_GROUPSEQ.NEXTVAL, #{grCode}, #{ngPic}, #{ngMax}, #{ngMin}
            , TO_DATE(#{ngStart1}||#{ngStart2}, 'YY-MM-DD HH24:MI:SS'),
            TO_DATE(#{ngEnd1}||#{ngEnd2}, 'YY-MM-DD HH24:MI:SS')
            , #{ngCost}, #{ngLocation1}||#{ngLocation2}
            , #{ngIntro}, #{ngMyIntro},#{xlocation},#{ylocation})
   </insert> 
   

   <select id="grSearch" parameterType="com.toleisure.mybatis.dto.MemberDTO" resultType="com.toleisure.mybatis.dto.GroupDTO">
      SELECT G.GR_CODE AS grCode, NG.NG_PIC AS ngPic,  C.CATE_NAME AS grCate1Name, C2.CATE_NAME AS grCate2Name
            , G.GR_NAME AS grName, G.GR_PRE AS grPre, G.GR_NOTICE AS grNotice, M.MEM_NAME AS memName, NG.NG_DATE AS ngDate, CNT.GR_COUNT AS grCount
      FROM TBL_GROUP G, NOW_GROUP NG, MEMBER M, CATEGORY C, CATEGORY C2, (SELECT G.GR_CODE AS GR_CODE, COUNT(*) AS GR_COUNT
                                                                          FROM TBL_GROUP G JOIN NOW_GROUP NG
                                                                              ON G.GR_CODE=NG.GR_CODE JOIN FIXED_GROUP FG
                                                                                      ON FG.NG_CODE=NG.NG_CODE
                                                                          GROUP BY G.GR_CODE) CNT
      WHERE G.GR_CODE = NG.GR_CODE AND G.MEM_ID = M.MEM_ID AND G.CATE_CODE1 = C.CATE_CODE AND G.CATE_CODE2 = C2.CATE_CODE(+) 
        AND CNT.GR_CODE = G.GR_CODE
        AND (G.GR_CODE, NG.NG_DATE) IN (SELECT G.GR_CODE, MAX(NG_DATE)
                                 FROM NOW_GROUP NG, TBL_GROUP G
                                 WHERE G.GR_CODE=NG.GR_CODE
                                 GROUP BY G.GR_CODE)
        AND G.MEM_ID= #{memId}
      ORDER BY NG_DATE DESC
   </select>
   
   <select id="groupFormInfo" parameterType="Integer" resultType="com.toleisure.mybatis.dto.GroupDTO">
      SELECT GR_CODE AS grCode, MEM_ID AS memId, GR_NAME AS grName, GR_PRE AS grPre, GR_NOTICE AS grNotice, CATE_CODE1 AS grCate1, CATE_CODE2 AS grCate2
      FROM TBL_GROUP
      WHERE GR_CODE=${grCode}
   </select>
   
   <!-- 찜 모임 목록 -->
   
   <select id="jjimGroup" parameterType="com.toleisure.mybatis.dto.MemberDTO" resultType="com.toleisure.mybatis.dto.GroupDTO">
      SELECT MEM_ID AS memId, NG_CODE AS ngCode, NG_PIC AS ngPic, CATE1 AS grCate1Name, CATE2 AS grCate2Name, GR_NAME AS grName, MEM_NAME AS memName, NG_DATE AS ngDate, GR_COUNT AS grCount
      FROM MEM_FAV_GROUP
      WHERE MEM_ID=#{memId}
   </select>
   
   <!-- 찜 호스트 목록 -->
   
   <select id="jjimHost" parameterType="com.toleisure.mybatis.dto.MemberDTO" resultType="com.toleisure.mybatis.dto.GroupDTO">
      SELECT HF.MEM_ID AS memId, H.MEM_ID AS hostId, M.MEM_PIC AS memPic, M.MEM_NAME AS memName
      FROM HOST_FAVORITE HF, HOST H, MEMBER M
      WHERE HF.HOST_CODE = H.HOST_CODE AND H.MEM_ID = M.MEM_ID AND HF.MEM_ID=#{memId}
   </select>
   
   <!-- 현재 참여중인 나(접속중인 사람)의 모임 목록 -->
   <select id="myNowGroup" parameterType="String" resultType="com.toleisure.mybatis.dto.GroupDTO">
      SELECT RQ.MEM_ID AS memId, RQ.NG_CODE AS ngCode, NG.NG_PIC as ngPic, G.GR_NAME as grName, C.CATE_NAME AS grCate1Name, NVL(C2.CATE_NAME,0) AS grCate2Name, M.MEM_NAME as memName, NG.NG_STARTDATE as ngStart, NVL(CNT.GR_COUNT,0) AS grCount
      FROM GR_REQUEST RQ, NOW_GROUP NG, TBL_GROUP G, CATEGORY C, CATEGORY C2, MEMBER M, (SELECT NG.NG_CODE AS NG_CODE, G.GR_CODE AS GR_CODE, RANK() OVER(PARTITION BY G.GR_CODE ORDER BY NG.NG_STARTDATE) AS GR_COUNT
                                                                                             FROM TBL_GROUP G, NOW_GROUP NG, FIXED_GROUP FG
                                                                                             WHERE G.GR_CODE=NG.GR_CODE AND FG.NG_CODE=NG.NG_CODE) CNT   
      WHERE RQ.NG_CODE=NG.NG_CODE AND NG.GR_CODE=G.GR_CODE AND G.CATE_CODE1 = C.CATE_CODE AND G.CATE_CODE2 = C2.CATE_CODE(+)
        AND G.MEM_ID=M.MEM_ID AND CNT.GR_CODE(+) = G.GR_CODE AND CNT.NG_CODE=RQ.NG_CODE
        AND RQ.MEM_ID=#{memId}
        AND NG.NG_STARTDATE >= SYSDATE 
        AND (RQ.NG_CODE, RQ.MEM_ID) NOT IN (SELECT RQ.NG_CODE, RQ.MEM_ID 
                                            FROM GR_REQUEST RQ, PAYMENT P, REFUND RF
                                            WHERE RQ.RE_CODE = P.RE_CODE AND P.PAY_CODE = RF.PAY_CODE AND RQ.MEM_ID=#{memId})
      ORDER BY NG_DATE DESC
   </select>
   
   <!-- 현재 종료된 나(접속중인 사람)의 모임 목록 -->
   <select id="myEndGroup" parameterType="String" resultType="com.toleisure.mybatis.dto.GroupDTO">
      SELECT RQ.MEM_ID AS memId, RQ.NG_CODE AS ngCode, NG.NG_PIC as ngPic, G.GR_NAME as grName, C.CATE_NAME AS grCate1Name, NVL(C2.CATE_NAME,0) AS grCate2Name, M.MEM_NAME as memName, NG.NG_STARTDATE as ngStart, NVL(CNT.GR_COUNT,0) AS grCount
      FROM GR_REQUEST RQ, GR_JOIN J, PAYMENT P, NOW_GROUP NG, TBL_GROUP G, CATEGORY C, CATEGORY C2, MEMBER M, (SELECT NG.NG_CODE AS NG_CODE, G.GR_CODE AS GR_CODE, RANK() OVER(PARTITION BY G.GR_CODE ORDER BY NG.NG_STARTDATE) AS GR_COUNT
                                                                                             FROM TBL_GROUP G, NOW_GROUP NG, FIXED_GROUP FG
                                                                                             WHERE G.GR_CODE=NG.GR_CODE AND FG.NG_CODE=NG.NG_CODE) CNT   
      WHERE RQ.NG_CODE=NG.NG_CODE AND NG.GR_CODE=G.GR_CODE AND G.CATE_CODE1 = C.CATE_CODE AND G.CATE_CODE2 = C2.CATE_CODE(+)
        AND G.MEM_ID=M.MEM_ID AND CNT.GR_CODE(+) = G.GR_CODE AND CNT.NG_CODE=RQ.NG_CODE AND P.RE_CODE=RQ.RE_CODE AND P.PAY_CODE=J.PAY_CODE
        AND RQ.MEM_ID=#{memId}
        AND  SYSDATE > NG.NG_STARTDATE
        AND (RQ.NG_CODE, RQ.MEM_ID) NOT IN (SELECT RQ.NG_CODE, RQ.MEM_ID 
                                            FROM GR_REQUEST RQ, PAYMENT P, REFUND RF
                                            WHERE RQ.RE_CODE = P.RE_CODE AND P.PAY_CODE = RF.PAY_CODE AND RQ.MEM_ID=#{memId})
      ORDER BY NG_DATE DESC
   </select>

      <!-- 현재 선택한 모임에 대해 피드백을 작성하기 위한 joinCode 구하기 -->
   <select id="feedJoinCode" parameterType="com.toleisure.mybatis.dto.GroupDTO" resultType="Integer">
      SELECT JOIN_CODE AS joinCode
      FROM GR_REQUEST RQ, PAYMENT P, GR_JOIN J
      WHERE RQ.RE_CODE=P.RE_CODE AND P.PAY_CODE=J.PAY_CODE
        AND RQ.NG_CODE=#{ngCode} AND RQ.MEM_ID=#{memId}
   </select>
	
	<!-- 피드백 작성한 내역이 있는지 확인 -->
   <select id="feedCheck" parameterType="com.toleisure.mybatis.dto.GroupDTO" resultType="String">
      SELECT CASE WHEN COUNT(*)=1 THEN 'Y' ELSE 'N' END
      FROM FEEDBACK F, GR_JOIN J, PAYMENT P, GR_REQUEST R
      WHERE F.JOIN_CODE=J.JOIN_CODE AND J.PAY_CODE = P.PAY_CODE AND P.RE_CODE = R.RE_CODE
        AND (R.MEM_ID = #{memId} AND R.NG_CODE = #{ngCode})
   </select>
	
	<!-- ngCode 에 가입되어 있는지 확인 -->
   <select id="joinCheck" parameterType="com.toleisure.mybatis.dto.GroupDTO" resultType="String">
      SELECT CASE WHEN COUNT(*)=1 THEN 'Y' ELSE 'N' END
		FROM GR_REQUEST RQ, PAYMENT P, GR_JOIN J
		WHERE RQ.RE_CODE=P.RE_CODE AND P.PAY_CODE=J.PAY_CODE
		AND RQ.NG_CODE=#{ngCode} AND RQ.MEM_ID=#{memId}
   </select>
   
   <!-- 피드백 insert -->
   <insert id="feedInsert" parameterType="com.toleisure.mybatis.dto.FeedBackDTO">
   	INSERT INTO FEEDBACK(FB_NUM, JOIN_CODE, FRESPONSE_CODE2, FRESPONSE_CODE) VALUES(FEEDBACKSEQ.NEXTVAL, #{joinCode}, #{goodPro}, #{goodCal})
   </insert>

   
   <!-- 모임 비용 조회 -->
   
   <select id="cost" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      SELECT NG_COST AS ngCost
      FROM NOW_GROUP
      WHERE NG_CODE = #{ngCode}
   </select>
   
   <!-- GR_REQUEST 테이블 INSERT -->
   
   <insert id="cardPay" parameterType="com.toleisure.mybatis.dto.GroupDTO">
      {
         CALL
         DECLARE
            requestCodeSeq INT;
         BEGIN
            requestCodeSeq := GR_REQSEQ.NEXTVAL;
                
            INSERT INTO GR_REQUEST(RE_CODE, NG_CODE, MEM_ID)
            VALUES(requestCodeSeq, #{ngCode}, #{memId});
                
            INSERT INTO PAYMENT(PAY_CODE, RE_CODE, PM_CODE, PAY_DETAIL)
            VALUES(PAYMENTSEQ.NEXTVAL, requestCodeSeq, 2, #{payDetail});
            
         END
      }
   </insert>
   
   <!-- GR_REQUEST 테이블 INSERT -->
   
   <insert id="phonePay" parameterType="com.toleisure.mybatis.dto.GroupDTO">
      {
         CALL
         DECLARE
            requestCodeSeq INT;
         BEGIN
            requestCodeSeq := GR_REQSEQ.NEXTVAL;
                
            INSERT INTO GR_REQUEST(RE_CODE, NG_CODE, MEM_ID)
            VALUES(requestCodeSeq, #{ngCode}, #{memId});
                
            INSERT INTO PAYMENT(PAY_CODE, RE_CODE, PM_CODE, PAY_DETAIL)
            VALUES(PAYMENTSEQ.NEXTVAL, requestCodeSeq, 1, #{payDetail});
            
         END
      }
   
   </insert>
   
   <!-- GR_REQUEST 테이블 INSERT -->
   
   <insert id="bankPay" parameterType="com.toleisure.mybatis.dto.GroupDTO">
      {
         CALL
         DECLARE
            requestCodeSeq INT;
         BEGIN
            requestCodeSeq := GR_REQSEQ.NEXTVAL;
                
            INSERT INTO GR_REQUEST(RE_CODE, NG_CODE, MEM_ID)
            VALUES(requestCodeSeq, #{ngCode}, #{memId});
                
            INSERT INTO PAYMENT(PAY_CODE, RE_CODE, PM_CODE, PAY_DETAIL)
            VALUES(PAYMENTSEQ.NEXTVAL, requestCodeSeq, 3, #{payDetail});
            
         END
      }
   
   </insert>
   
   <select id="reviewM" parameterType="Integer" resultType="com.toleisure.mybatis.dto.GroupDTO">
	   	SELECT GR_NAME AS grName,GR_CODE AS grCode, MEM_PIC AS memPic, MEM_NAME AS memName,NG_CODE AS ngCode, MEM_ID AS memId, REVIEW_NUM AS reviewNum,
        REVIEW_CONT AS reviewCont, REVIEW_STAR AS reviewStar, TO_CHAR(REVIEW_DATE, 'YYYY-MM-DD HH24:MI') AS reviewDate
      FROM
      (
          SELECT RE.REVIEW_NUM, ME.MEM_NAME,ME.MEM_ID,ME.MEM_PIC,JO.JOIN_CODE,FX.FIX_CODE,GR.GR_CODE,GR.GR_NAME, NG.NG_CODE,RE.REVIEW_CONT, RE.REVIEW_STAR, RE.REVIEW_DATE
          FROM REVIEW RE JOIN GR_JOIN JO 
          ON RE.JOIN_CODE = JO.JOIN_CODE
              JOIN FIXED_GROUP FX
              ON JO.FIX_CODE = FX.FIX_CODE
                  JOIN NOW_GROUP NG
                  ON FX.NG_CODE = NG.NG_CODE
                      JOIN TBL_GROUP GR
                      ON NG.GR_CODE = GR.GR_CODE
                        JOIN PAYMENT P
                         ON P.PAY_CODE = JO.PAY_CODE 
                             JOIN GR_REQUEST RQ
                             ON RQ.RE_CODE = P.RE_CODE
                                JOIN MEMBER ME
                                ON ME.MEM_ID = RQ.MEM_ID
      )
      WHERE gr_CODE = #{grCode}
      ORDER BY REVIEW_DATE DESC
   </select> 
   
   <insert id="reviewInsert" parameterType="com.toleisure.mybatis.dto.GroupDTO">
   		INSERT INTO REVIEW(REVIEW_NUM, JOIN_CODE, REVIEW_CONT, REVIEW_STAR)
		VALUES(REVIEWSEQ.NEXTVAL, #{joinCode}, #{reviewCont}, #{reviewStar})
   </insert>
   
   
   <select id="joinMember" parameterType="Integer" resultType="com.toleisure.mybatis.dto.MemberDTO">
   		SELECT M.MEM_ID AS memId, M.MEM_PIC AS memPic, M.MEM_NAME AS memName, P.PAY_CODE AS payCode
		FROM GR_REQUEST RQ, PAYMENT P, MEMBER M
		WHERE RQ.NG_CODE = #{ngCode} AND RQ.RE_CODE = P.RE_CODE AND P.PAY_CODE NOT IN (SELECT RF_CODE
		                                                                        FROM REFUND R, PAYMENT P
		                                                                        WHERE R.PAY_CODE = P.PAY_CODE)
		      AND RQ.MEM_ID = M.MEM_ID
   
   </select>
   
   <select id="myjoinCheck" parameterType="com.toleisure.mybatis.dto.GroupDTO" resultType="com.toleisure.mybatis.dto.GroupDTO">
   		SELECT COUNT(*) AS memCount, P.PAY_CODE AS payCode
		FROM GR_REQUEST RQ, PAYMENT P, MEMBER M
		WHERE RQ.NG_CODE = #{ngCode} AND RQ.RE_CODE = P.RE_CODE AND P.PAY_CODE NOT IN (SELECT RF_CODE
		                                                                        FROM REFUND R, PAYMENT P
		                                                                        WHERE R.PAY_CODE = P.PAY_CODE)
		      AND RQ.MEM_ID = M.MEM_ID
		      AND M.MEM_ID = #{memId}
		GROUP BY P.PAY_CODE
   
   </select>
   
   <select id="joinMemberCnt" parameterType="Integer" resultType="com.toleisure.mybatis.dto.GroupDTO">
   		SELECT COUNT(*) AS memCount
		FROM GR_REQUEST RQ, PAYMENT P, MEMBER M
		WHERE RQ.NG_CODE = #{ngCode} AND RQ.RE_CODE = P.RE_CODE AND P.PAY_CODE NOT IN (SELECT RF_CODE
		                                                                        FROM REFUND R, PAYMENT P
		                                                                        WHERE R.PAY_CODE = P.PAY_CODE)
		      AND RQ.MEM_ID = M.MEM_ID
   
   </select>
    
    <select id ="AvgStar" parameterType="Integer" resultType="double">
    		SELECT NVL(AVG(R.REVIEW_STAR), 0) AS REVIEW_STAR_AVG
			FROM NOW_GROUP NG JOIN TBL_GROUP G
			ON NG.GR_CODE = G.GR_CODE
			    JOIN FIXED_GROUP FG
			    ON NG.NG_CODE=FG.NG_CODE
			        JOIN GR_JOIN GJ
			        ON FG.FIX_CODE=GJ.FIX_CODE
			            JOIN REVIEW R
			            ON R.JOIN_CODE=GJ.JOIN_CODE
			WHERE G.GR_CODE=#{grCode}
    </select>
    
    
    <select id ="TotalPeople" parameterType="Integer" resultType="java.lang.Integer">
          SELECT COUNT(*) AS TOTALPEOPLE
         FROM NOW_GROUP NG JOIN TBL_GROUP G
         ON NG.GR_CODE = G.GR_CODE
             JOIN FIXED_GROUP FG
             ON NG.NG_CODE=FG.NG_CODE
                 JOIN GR_JOIN GJ
                 ON FG.FIX_CODE=GJ.FIX_CODE
                     JOIN REVIEW R
                     ON R.JOIN_CODE=GJ.JOIN_CODE
         WHERE G.GR_CODE=#{grCode}
    </select>
    
    
    <select id ="getGrCode" parameterType="Integer" resultType="java.lang.Integer">
         SELECT G.GR_CODE
		 FROM TBL_GROUP G, NOW_GROUP N
		 WHERE G.GR_CODE = N.GR_CODE AND N.NG_CODE = ${ngCode}
    </select>

</mapper>
